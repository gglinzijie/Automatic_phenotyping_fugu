FROM ubuntu:16.04
# Modified from https://hub.docker.com/r/waleedka/modern-deep-learning/
# Supress warnings about missing front-end. As recommended at:
# http://stackoverflow.com/questions/22466255/is-it-possibe-to-answer-dialog-questions-when-installing-under-docker
ARG DEBIAN_FRONTEND=noninteractive

# Essentials: developer tools, build tools, OpenBLAS
RUN apt-get update && apt-get install -y --no-install-recommends \
    apt-utils git curl vim unzip openssh-client wget \
    build-essential cmake \
    libopenblas-dev


# Python 3.5.2
# For convenience, alias (but don't sym-link) python & pip to python3 & pip3 as recommended in:
# http://askubuntu.com/questions/351318/changing-symlink-python-to-python3-causes-problems
RUN apt-get install -y --no-install-recommends python3.5 python3.5-dev python3-pip python3-tk && \
    pip3 install --no-cache-dir --upgrade pip setuptools && \
    echo "alias python='python3'" >> /root/.bash_aliases && \
    echo "alias pip='pip3'" >> /root/.bash_aliases
# Pillow and it's dependencies
RUN apt-get install -y --no-install-recommends libjpeg-dev zlib1g-dev && \
    pip3 --no-cache-dir install Pillow
# Science libraries and other common packages
RUN pip3 --no-cache-dir install \
    numpy scipy sklearn scikit-image pandas matplotlib Cython requests

# jupyter lab
RUN pip3 --no-cache-dir install jupyterlab
# Expose port for jupyter lab
EXPOSE 8888

# Tensorflow 1.6.0 - CPU
RUN pip3 install --no-cache-dir --upgrade tensorflow==1.6.0 

# Expose port for TensorBoard
EXPOSE 6006

# OpenCV 3.4.1
# Dependencies
RUN apt-get install -y --no-install-recommends \
    libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev \
    liblapacke-dev checkinstall
# Get source from github
RUN git clone -b 3.4.1 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv
# Compile
RUN cd /usr/local/src/opencv && mkdir build && cd build && \
    cmake -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D BUILD_TESTS=OFF \
          -D BUILD_PERF_TESTS=OFF \
          -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
          .. && \
    make -j"$(nproc)" && \
    make install

RUN apt-get install -y libgl1-mesa-dev
# RUN pip3 --no-cache-dir install imgaug==0.4.0
# Keras 2.1.5
RUN pip3 install --no-cache-dir --upgrade h5py pydot_ng keras==2.1.5 



RUN mkdir mask_rcnn
RUN mkdir trained_model
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/__init__.py  --output mask_rcnn/__init__.py 
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/model.py --output mask_rcnn/model.py
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/config.py --output mask_rcnn/config.py
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/utils.py --output mask_rcnn/utils.py
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/visualize.py --output mask_rcnn/visualize.py
RUN curl https://raw.githubusercontent.com/gglinzijie/Automatic_phenotyping_fugu/master/parallel_model.py --output mask_rcnn/parallel_model.py



WORKDIR "/"
CMD ["/bin/bash"]
